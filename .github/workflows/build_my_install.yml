name: Build apk signed with GNU Emacs' feature/android keystore.
on:
  push:
    branches: [ 'my/*' ]
  pull_request:
    branches: [ 'my/*' ]
  workflow_dispatch:
    branches: [ 'my/*' ]    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package_variant: [ apt-android-7 ]
    steps:
    #
    - name: Checkout source.
      uses: actions/checkout@v3
    #    
    - name: Build with Gradle
      run: |
        echo "Setting vars"
        # Set RELEASE_VERSION_NAME to "<CURRENT_VERSION_NAME>+<last_commit_hash>"
        CURRENT_VERSION_NAME_REGEX='\s+versionName "([^"]+)"$'
        CURRENT_VERSION_NAME="$(grep -m 1 -E "$CURRENT_VERSION_NAME_REGEX" ./app/build.gradle | sed -r "s/$CURRENT_VERSION_NAME_REGEX/\1/")"
        RELEASE_VERSION_NAME="v$CURRENT_VERSION_NAME+${GITHUB_SHA:0:7}" # The "+" is necessary so that versioning precedence is not affected
        if ! printf "%s" "${RELEASE_VERSION_NAME/v/}" | grep -qP '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'; then
        exit_on_error "The versionName '${RELEASE_VERSION_NAME/v/}' is not a valid version as per semantic version '2.0.0' spec in the format 'major.minor.patch(-prerelease)(+buildmetadata)'. https://semver.org/spec/v2.0.0.html."
        fi

        APK_DIR_PATH="./app/build/outputs/apk/debug"
        # Note the "-", GITHUB_SHA will already have "+" before it
        APK_VERSION_TAG="$RELEASE_VERSION_NAME-${{ env.PACKAGE_VARIANT }}-github-debug"
        APK_BASENAME_PREFIX="termux-app_$APK_VERSION_TAG"

        # Used by attachment steps later
        echo "APK_DIR_PATH=$APK_DIR_PATH" >> $GITHUB_ENV
        echo "APK_VERSION_TAG=$APK_VERSION_TAG" >> $GITHUB_ENV
        echo "APK_BASENAME_PREFIX=$APK_BASENAME_PREFIX" >> $GITHUB_ENV

        echo "Building APKs for 'APK_VERSION_TAG' build"
        export TERMUX_APP_VERSION_NAME="${RELEASE_VERSION_NAME/v/}" # Used by app/build.gradle
        export TERMUX_APK_VERSION_TAG="$APK_VERSION_TAG" # Used by app/build.gradle
        export TERMUX_PACKAGE_VARIANT="${{ env.PACKAGE_VARIANT }}" # Used by app/build.gradle

        # Retrieve keystore file from Emacs feature/android branch.
        git clone --depth 1 \
                  --branch feature/android \
                  --no-checkout https://github.com/emacs-mirror/emacs.git
        git -C emacs sparse-checkout set java/emacs.keystore
        git -C emacs checkout feature/android

        # sed app/build.gradle to refer java/emacs.keystore instead of testkey_untrusted.jks.
        perl -pi -e "s|storeFile file\('testkey_untrusted.jks'\)|storeFile file('../emacs/java/emacs.keystore')|;s|keyAlias 'alias'|keyAlias 'emacs keystore'|;s|storePassword 'xrj45yWGLbsO7W0v'|storePassword 'emacs1'|;s|keyPassword 'xrj45yWGLbsO7W0v'|keyPassword 'emacs1'|" app/build.gradle

        # build termux with my userid.
        ./gradlew assembleDebug
        
        for abi in universal arm64-v8a armeabi-v7a x86_64 x86; do
          echo "$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk";
          if ! test -f "$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk"; then
            files_found="$(ls "$APK_DIR_PATH")"
            echo "files: $files_found"
            exit 1
          fi
        done

    - name: Upload APKs to GitHub artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.package_variant }}
        path: ./app/build/outputs/apk/debug/*.apk

  upload:
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_RUN_ID_NUMBER: ${{ github.run_number }}-${{ github.run_id }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
      - name: Upload APKs to release
        uses: termux/upload-release-action@v4.1.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "**/*.apk"
          file_glob: true
          release_name:
          tag: ${{ env.GITHUB_RUN_ID_NUMBER }}
          checksums: sha256,sha512,md5
